2024-01-28 22:23:47,627 - mmdet - INFO - Distributed training: False
2024-01-28 22:23:51,780 - mmdet - INFO - Config:
dataset_type = 'CocoDataset'
data_root = 'C:/Users/Administrator/Desktop/read-Co-DETR-main/data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='AutoAugment',
        policies=[[{
            'type':
            'Resize',
            'img_scale': [(480, 1333), (512, 1333), (544, 1333), (576, 1333),
                          (608, 1333), (640, 1333), (672, 1333), (704, 1333),
                          (736, 1333), (768, 1333), (800, 1333)],
            'multiscale_mode':
            'value',
            'keep_ratio':
            True
        }],
                  [{
                      'type': 'Resize',
                      'img_scale': [(400, 4200), (500, 4200), (600, 4200)],
                      'multiscale_mode': 'value',
                      'keep_ratio': True
                  }, {
                      'type': 'RandomCrop',
                      'crop_type': 'absolute_range',
                      'crop_size': (384, 600),
                      'allow_negative_crop': True
                  }, {
                      'type':
                      'Resize',
                      'img_scale': [(480, 1333), (512, 1333), (544, 1333),
                                    (576, 1333), (608, 1333), (640, 1333),
                                    (672, 1333), (704, 1333), (736, 1333),
                                    (768, 1333), (800, 1333)],
                      'multiscale_mode':
                      'value',
                      'override':
                      True,
                      'keep_ratio':
                      True
                  }]]),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=1),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=1),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file=
        'C:/Users/Administrator/Desktop/read-Co-DETR-main/data/coco/annotations/instances_train2017.json',
        img_prefix=
        'C:/Users/Administrator/Desktop/read-Co-DETR-main/data/coco/train2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='AutoAugment',
                policies=[[{
                    'type':
                    'Resize',
                    'img_scale': [(480, 1333), (512, 1333), (544, 1333),
                                  (576, 1333), (608, 1333), (640, 1333),
                                  (672, 1333), (704, 1333), (736, 1333),
                                  (768, 1333), (800, 1333)],
                    'multiscale_mode':
                    'value',
                    'keep_ratio':
                    True
                }],
                          [{
                              'type': 'Resize',
                              'img_scale': [(400, 4200), (500, 4200),
                                            (600, 4200)],
                              'multiscale_mode': 'value',
                              'keep_ratio': True
                          }, {
                              'type': 'RandomCrop',
                              'crop_type': 'absolute_range',
                              'crop_size': (384, 600),
                              'allow_negative_crop': True
                          }, {
                              'type':
                              'Resize',
                              'img_scale': [(480, 1333), (512, 1333),
                                            (544, 1333), (576, 1333),
                                            (608, 1333), (640, 1333),
                                            (672, 1333), (704, 1333),
                                            (736, 1333), (768, 1333),
                                            (800, 1333)],
                              'multiscale_mode':
                              'value',
                              'override':
                              True,
                              'keep_ratio':
                              True
                          }]]),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=1),
            dict(type='DefaultFormatBundle'),
            dict(
                type='Collect',
                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
        ],
        filter_empty_gt=False),
    val=dict(
        type='CocoDataset',
        ann_file=
        'C:/Users/Administrator/Desktop/read-Co-DETR-main/data/coco/annotations/instances_val2017.json',
        img_prefix=
        'C:/Users/Administrator/Desktop/read-Co-DETR-main/data/coco/val2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=1),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file=
        'C:/Users/Administrator/Desktop/read-Co-DETR-main/data/coco/annotations/instances_val2017.json',
        img_prefix=
        'C:/Users/Administrator/Desktop/read-Co-DETR-main/data/coco/val2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=1),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=16)
num_dec_layer = 6
lambda_2 = 2.0
model = dict(
    type='CoDETR',
    backbone=dict(
        type='UniRepLKNetBackbone',
        depths=[3, 3, 27, 3],
        dims=[128, 256, 512, 1024],
        drop_path_rate=0.6,
        kernel_sizes=None,
        with_cp=True,
        attempt_use_lk_impl=False,
        init_cfg=dict(type='Pretrained', checkpoint=None)),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            octave_base_scale=4,
            scales_per_octave=3,
            ratios=[0.5, 1.0, 2.0],
            strides=[8, 16, 32, 64, 128]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=12.0),
        loss_bbox=dict(type='L1Loss', loss_weight=12.0)),
    query_head=dict(
        type='CoDeformDETRHead',
        num_query=300,
        num_classes=80,
        in_channels=2048,
        sync_cls_avg_factor=True,
        with_box_refine=True,
        as_two_stage=True,
        mixed_selection=True,
        transformer=dict(
            type='CoDeformableDetrTransformer',
            num_co_heads=2,
            encoder=dict(
                type='DetrTransformerEncoder',
                num_layers=6,
                transformerlayers=dict(
                    type='BaseTransformerLayer',
                    attn_cfgs=dict(
                        type='MultiScaleDeformableAttention',
                        embed_dims=256,
                        dropout=0.0),
                    feedforward_channels=2048,
                    ffn_dropout=0.0,
                    operation_order=('self_attn', 'norm', 'ffn', 'norm'))),
            decoder=dict(
                type='CoDeformableDetrTransformerDecoder',
                num_layers=6,
                return_intermediate=True,
                look_forward_twice=True,
                transformerlayers=dict(
                    type='DetrTransformerDecoderLayer',
                    attn_cfgs=[
                        dict(
                            type='MultiheadAttention',
                            embed_dims=256,
                            num_heads=8,
                            dropout=0.0),
                        dict(
                            type='MultiScaleDeformableAttention',
                            embed_dims=256,
                            dropout=0.0)
                    ],
                    feedforward_channels=2048,
                    ffn_dropout=0.0,
                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',
                                     'ffn', 'norm')))),
        positional_encoding=dict(
            type='SinePositionalEncoding',
            num_feats=128,
            normalize=True,
            offset=-0.5),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=2.0),
        loss_bbox=dict(type='L1Loss', loss_weight=5.0),
        loss_iou=dict(type='GIoULoss', loss_weight=2.0)),
    roi_head=[
        dict(
            type='CoStandardRoIHead',
            bbox_roi_extractor=dict(
                type='SingleRoIExtractor',
                roi_layer=dict(
                    type='RoIAlign', output_size=7, sampling_ratio=0),
                out_channels=256,
                featmap_strides=[8, 16, 32, 64],
                finest_scale=112),
            bbox_head=dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=80,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.1, 0.1, 0.2, 0.2]),
                reg_class_agnostic=False,
                reg_decoded_bbox=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=12.0),
                loss_bbox=dict(type='GIoULoss', loss_weight=120.0)),
            mask_roi_extractor=dict(
                type='SingleRoIExtractor',
                roi_layer=dict(
                    type='RoIAlign', output_size=14, sampling_ratio=0),
                out_channels=256,
                featmap_strides=[8, 16, 32, 64],
                finest_scale=112),
            mask_head=dict(
                type='FCNMaskHead',
                num_convs=4,
                in_channels=256,
                conv_out_channels=256,
                num_classes=80,
                loss_mask=dict(
                    type='CrossEntropyLoss', use_mask=True, loss_weight=12.0)))
    ],
    bbox_head=[
        dict(
            type='CoATSSHead',
            num_classes=80,
            in_channels=256,
            stacked_convs=1,
            feat_channels=256,
            anchor_generator=dict(
                type='AnchorGenerator',
                ratios=[1.0],
                octave_base_scale=8,
                scales_per_octave=1,
                strides=[8, 16, 32, 64, 128]),
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            loss_cls=dict(
                type='FocalLoss',
                use_sigmoid=True,
                gamma=2.0,
                alpha=0.25,
                loss_weight=12.0),
            loss_bbox=dict(type='GIoULoss', loss_weight=24.0),
            loss_centerness=dict(
                type='CrossEntropyLoss', use_sigmoid=True, loss_weight=12.0))
    ],
    train_cfg=[
        dict(
            assigner=dict(
                type='HungarianAssigner',
                cls_cost=dict(type='FocalLossCost', weight=2.0),
                reg_cost=dict(
                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),
                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0))),
        dict(
            rpn=dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.7,
                    neg_iou_thr=0.3,
                    min_pos_iou=0.3,
                    match_low_quality=True,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=256,
                    pos_fraction=0.5,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=False),
                allowed_border=-1,
                pos_weight=-1,
                debug=False),
            rpn_proposal=dict(
                nms_pre=4000,
                max_per_img=1000,
                nms=dict(type='nms', iou_threshold=0.7),
                min_bbox_size=0),
            rcnn=dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.5,
                    neg_iou_thr=0.5,
                    min_pos_iou=0.5,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                mask_size=28,
                pos_weight=-1,
                debug=False)),
        dict(
            assigner=dict(type='ATSSAssigner', topk=9),
            allowed_border=-1,
            pos_weight=-1,
            debug=False)
    ],
    test_cfg=[
        dict(max_per_img=100),
        dict(
            rpn=dict(
                nms_pre=1000,
                max_per_img=1000,
                nms=dict(type='nms', iou_threshold=0.7),
                min_bbox_size=0),
            rcnn=dict(
                score_thr=0.0,
                nms=dict(type='nms', iou_threshold=0.5),
                mask_thr_binary=0.5,
                max_per_img=100)),
        dict(
            nms_pre=1000,
            min_bbox_size=0,
            score_thr=0.0,
            nms=dict(type='nms', iou_threshold=0.6),
            max_per_img=100)
    ])
optimizer = dict(
    type='AdamW',
    lr=0.0002,
    weight_decay=0.0001,
    paramwise_cfg=dict(
        custom_keys=dict(
            backbone=dict(lr_mult=0.1),
            sampling_offsets=dict(lr_mult=0.1),
            reference_points=dict(lr_mult=0.1))))
optimizer_config = dict(grad_clip=dict(max_norm=0.1, norm_type=2))
lr_config = dict(policy='step', step=[11])
runner = dict(type='EpochBasedRunner', max_epochs=12)
work_dir = 'workdir'
auto_resume = False
gpu_ids = [0]

2024-01-28 22:23:51,781 - mmdet - INFO - Set random seed to 475686400, deterministic: False
2024-01-28 22:23:52,228 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
Name of parameter - Initialization information

rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_cls.weight - torch.Size([9, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_cls.bias - torch.Size([9]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_reg.weight - torch.Size([36, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_reg.bias - torch.Size([36]): 
NormalInit: mean=0, std=0.01, bias=0 
2024-01-28 22:23:52,300 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

bbox_head.fc_cls.weight - torch.Size([81, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.fc_cls.bias - torch.Size([81]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.fc_reg.weight - torch.Size([320, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

bbox_head.fc_reg.bias - torch.Size([320]): 
NormalInit: mean=0, std=0.001, bias=0 

bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

mask_head.convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

mask_head.convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoStandardRoIHead  

mask_head.convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

mask_head.convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoStandardRoIHead  

mask_head.convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

mask_head.convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoStandardRoIHead  

mask_head.convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

mask_head.convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoStandardRoIHead  

mask_head.upsample.weight - torch.Size([256, 256, 2, 2]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

mask_head.upsample.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

mask_head.conv_logits.weight - torch.Size([80, 256, 1, 1]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

mask_head.conv_logits.bias - torch.Size([80]): 
Initialized by user-defined `init_weights` in FCNMaskHead  
2024-01-28 22:23:52,361 - mmdet - INFO - initialize CoATSSHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01, 'override': {'type': 'Normal', 'name': 'atss_cls', 'std': 0.01, 'bias_prob': 0.01}}
Name of parameter - Initialization information

cls_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

cls_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoATSSHead  

cls_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoATSSHead  

reg_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

reg_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoATSSHead  

reg_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoATSSHead  

atss_cls.weight - torch.Size([80, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=-4.59511985013459 

atss_cls.bias - torch.Size([80]): 
NormalInit: mean=0, std=0.01, bias=-4.59511985013459 

atss_reg.weight - torch.Size([4, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

atss_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.01, bias=0 

atss_centerness.weight - torch.Size([1, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

atss_centerness.bias - torch.Size([1]): 
NormalInit: mean=0, std=0.01, bias=0 

scales.0.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of CoATSSHead  

scales.1.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of CoATSSHead  

scales.2.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of CoATSSHead  

scales.3.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of CoATSSHead  

scales.4.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of CoATSSHead  
Name of parameter - Initialization information

backbone.downsample_layers.0.0.weight - torch.Size([64, 3, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.0.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.0.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.0.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.0.3.weight - torch.Size([128, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.0.3.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.0.4.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.0.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.1.0.weight - torch.Size([256, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.1.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.1.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.1.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.2.0.weight - torch.Size([512, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.2.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.2.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.2.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.3.0.weight - torch.Size([1024, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.3.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.3.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.downsample_layers.3.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.gamma - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.dwconv.weight - torch.Size([128, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.se.down.weight - torch.Size([32, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.se.down.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.se.up.weight - torch.Size([128, 32, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.se.up.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.pwconv1.1.weight - torch.Size([512, 128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.pwconv1.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.act.1.gamma - torch.Size([1, 1, 1, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.act.1.beta - torch.Size([1, 1, 1, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.pwconv2.0.weight - torch.Size([128, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.pwconv2.2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.0.pwconv2.2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.gamma - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.dwconv.weight - torch.Size([128, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.se.down.weight - torch.Size([32, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.se.down.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.se.up.weight - torch.Size([128, 32, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.se.up.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.pwconv1.1.weight - torch.Size([512, 128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.pwconv1.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.act.1.gamma - torch.Size([1, 1, 1, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.act.1.beta - torch.Size([1, 1, 1, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.pwconv2.0.weight - torch.Size([128, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.pwconv2.2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.1.pwconv2.2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.gamma - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.dwconv.weight - torch.Size([128, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.se.down.weight - torch.Size([32, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.se.down.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.se.up.weight - torch.Size([128, 32, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.se.up.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.pwconv1.1.weight - torch.Size([512, 128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.pwconv1.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.act.1.gamma - torch.Size([1, 1, 1, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.act.1.beta - torch.Size([1, 1, 1, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.pwconv2.0.weight - torch.Size([128, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.pwconv2.2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.0.2.pwconv2.2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.gamma - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.lk_origin.weight - torch.Size([256, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.origin_bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.origin_bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_conv_k5_1.weight - torch.Size([256, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_bn_k5_1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_bn_k5_1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_conv_k7_2.weight - torch.Size([256, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_bn_k7_2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_bn_k7_2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_conv_k3_3.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_bn_k3_3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_bn_k3_3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_conv_k3_4.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_bn_k3_4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_bn_k3_4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_conv_k3_5.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_bn_k3_5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.dwconv.dil_bn_k3_5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.se.down.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.se.down.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.se.up.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.se.up.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.pwconv1.1.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.pwconv1.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.act.1.gamma - torch.Size([1, 1, 1, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.act.1.beta - torch.Size([1, 1, 1, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.pwconv2.0.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.pwconv2.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.0.pwconv2.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.gamma - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.lk_origin.weight - torch.Size([256, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.origin_bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.origin_bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_conv_k5_1.weight - torch.Size([256, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_bn_k5_1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_bn_k5_1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_conv_k7_2.weight - torch.Size([256, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_bn_k7_2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_bn_k7_2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_conv_k3_3.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_bn_k3_3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_bn_k3_3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_conv_k3_4.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_bn_k3_4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_bn_k3_4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_conv_k3_5.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_bn_k3_5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.dwconv.dil_bn_k3_5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.se.down.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.se.down.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.se.up.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.se.up.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.pwconv1.1.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.pwconv1.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.act.1.gamma - torch.Size([1, 1, 1, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.act.1.beta - torch.Size([1, 1, 1, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.pwconv2.0.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.pwconv2.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.1.pwconv2.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.gamma - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.lk_origin.weight - torch.Size([256, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.origin_bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.origin_bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_conv_k5_1.weight - torch.Size([256, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_bn_k5_1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_bn_k5_1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_conv_k7_2.weight - torch.Size([256, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_bn_k7_2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_bn_k7_2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_conv_k3_3.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_bn_k3_3.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_bn_k3_3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_conv_k3_4.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_bn_k3_4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_bn_k3_4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_conv_k3_5.weight - torch.Size([256, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_bn_k3_5.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.dwconv.dil_bn_k3_5.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.se.down.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.se.down.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.se.up.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.se.up.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.pwconv1.1.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.pwconv1.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.act.1.gamma - torch.Size([1, 1, 1, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.act.1.beta - torch.Size([1, 1, 1, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.pwconv2.0.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.pwconv2.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.1.2.pwconv2.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.lk_origin.weight - torch.Size([512, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.origin_bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.origin_bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_conv_k5_1.weight - torch.Size([512, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_bn_k5_1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_bn_k5_1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_conv_k7_2.weight - torch.Size([512, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_bn_k7_2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_bn_k7_2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_conv_k3_3.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_bn_k3_3.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_bn_k3_3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_conv_k3_4.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_bn_k3_4.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_bn_k3_4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_conv_k3_5.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_bn_k3_5.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.dwconv.dil_bn_k3_5.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.0.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.1.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.2.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.lk_origin.weight - torch.Size([512, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.origin_bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.origin_bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_conv_k5_1.weight - torch.Size([512, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_bn_k5_1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_bn_k5_1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_conv_k7_2.weight - torch.Size([512, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_bn_k7_2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_bn_k7_2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_conv_k3_3.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_bn_k3_3.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_bn_k3_3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_conv_k3_4.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_bn_k3_4.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_bn_k3_4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_conv_k3_5.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_bn_k3_5.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.dwconv.dil_bn_k3_5.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.3.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.4.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.5.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.lk_origin.weight - torch.Size([512, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.origin_bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.origin_bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_conv_k5_1.weight - torch.Size([512, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_bn_k5_1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_bn_k5_1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_conv_k7_2.weight - torch.Size([512, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_bn_k7_2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_bn_k7_2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_conv_k3_3.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_bn_k3_3.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_bn_k3_3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_conv_k3_4.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_bn_k3_4.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_bn_k3_4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_conv_k3_5.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_bn_k3_5.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.dwconv.dil_bn_k3_5.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.6.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.7.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.8.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.lk_origin.weight - torch.Size([512, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.origin_bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.origin_bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_conv_k5_1.weight - torch.Size([512, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_bn_k5_1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_bn_k5_1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_conv_k7_2.weight - torch.Size([512, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_bn_k7_2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_bn_k7_2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_conv_k3_3.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_bn_k3_3.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_bn_k3_3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_conv_k3_4.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_bn_k3_4.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_bn_k3_4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_conv_k3_5.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_bn_k3_5.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.dwconv.dil_bn_k3_5.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.9.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.10.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.11.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.lk_origin.weight - torch.Size([512, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.origin_bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.origin_bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_conv_k5_1.weight - torch.Size([512, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_bn_k5_1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_bn_k5_1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_conv_k7_2.weight - torch.Size([512, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_bn_k7_2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_bn_k7_2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_conv_k3_3.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_bn_k3_3.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_bn_k3_3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_conv_k3_4.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_bn_k3_4.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_bn_k3_4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_conv_k3_5.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_bn_k3_5.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.dwconv.dil_bn_k3_5.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.12.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.13.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.14.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.lk_origin.weight - torch.Size([512, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.origin_bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.origin_bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_conv_k5_1.weight - torch.Size([512, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_bn_k5_1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_bn_k5_1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_conv_k7_2.weight - torch.Size([512, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_bn_k7_2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_bn_k7_2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_conv_k3_3.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_bn_k3_3.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_bn_k3_3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_conv_k3_4.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_bn_k3_4.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_bn_k3_4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_conv_k3_5.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_bn_k3_5.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.dwconv.dil_bn_k3_5.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.15.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.16.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.17.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.lk_origin.weight - torch.Size([512, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.origin_bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.origin_bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_conv_k5_1.weight - torch.Size([512, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_bn_k5_1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_bn_k5_1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_conv_k7_2.weight - torch.Size([512, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_bn_k7_2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_bn_k7_2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_conv_k3_3.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_bn_k3_3.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_bn_k3_3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_conv_k3_4.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_bn_k3_4.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_bn_k3_4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_conv_k3_5.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_bn_k3_5.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.dwconv.dil_bn_k3_5.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.18.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.19.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.20.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.lk_origin.weight - torch.Size([512, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.origin_bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.origin_bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_conv_k5_1.weight - torch.Size([512, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_bn_k5_1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_bn_k5_1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_conv_k7_2.weight - torch.Size([512, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_bn_k7_2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_bn_k7_2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_conv_k3_3.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_bn_k3_3.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_bn_k3_3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_conv_k3_4.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_bn_k3_4.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_bn_k3_4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_conv_k3_5.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_bn_k3_5.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.dwconv.dil_bn_k3_5.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.21.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.22.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.23.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.lk_origin.weight - torch.Size([512, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.origin_bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.origin_bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_conv_k5_1.weight - torch.Size([512, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_bn_k5_1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_bn_k5_1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_conv_k7_2.weight - torch.Size([512, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_bn_k7_2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_bn_k7_2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_conv_k3_3.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_bn_k3_3.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_bn_k3_3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_conv_k3_4.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_bn_k3_4.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_bn_k3_4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_conv_k3_5.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_bn_k3_5.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.dwconv.dil_bn_k3_5.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.24.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.25.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.gamma - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.dwconv.weight - torch.Size([512, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.se.down.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.se.down.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.se.up.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.se.up.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.pwconv1.1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.pwconv1.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.act.1.gamma - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.act.1.beta - torch.Size([1, 1, 1, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.pwconv2.0.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.pwconv2.2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.2.26.pwconv2.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.gamma - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.lk_origin.weight - torch.Size([1024, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.origin_bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.origin_bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_conv_k5_1.weight - torch.Size([1024, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_bn_k5_1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_bn_k5_1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_conv_k7_2.weight - torch.Size([1024, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_bn_k7_2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_bn_k7_2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_conv_k3_3.weight - torch.Size([1024, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_bn_k3_3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_bn_k3_3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_conv_k3_4.weight - torch.Size([1024, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_bn_k3_4.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_bn_k3_4.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_conv_k3_5.weight - torch.Size([1024, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_bn_k3_5.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.dwconv.dil_bn_k3_5.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.norm.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.norm.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.se.down.weight - torch.Size([256, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.se.down.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.se.up.weight - torch.Size([1024, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.se.up.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.pwconv1.1.weight - torch.Size([4096, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.pwconv1.1.bias - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.act.1.gamma - torch.Size([1, 1, 1, 4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.act.1.beta - torch.Size([1, 1, 1, 4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.pwconv2.0.weight - torch.Size([1024, 4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.pwconv2.2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.0.pwconv2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.gamma - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.lk_origin.weight - torch.Size([1024, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.origin_bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.origin_bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_conv_k5_1.weight - torch.Size([1024, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_bn_k5_1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_bn_k5_1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_conv_k7_2.weight - torch.Size([1024, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_bn_k7_2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_bn_k7_2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_conv_k3_3.weight - torch.Size([1024, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_bn_k3_3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_bn_k3_3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_conv_k3_4.weight - torch.Size([1024, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_bn_k3_4.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_bn_k3_4.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_conv_k3_5.weight - torch.Size([1024, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_bn_k3_5.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.dwconv.dil_bn_k3_5.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.norm.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.norm.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.se.down.weight - torch.Size([256, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.se.down.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.se.up.weight - torch.Size([1024, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.se.up.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.pwconv1.1.weight - torch.Size([4096, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.pwconv1.1.bias - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.act.1.gamma - torch.Size([1, 1, 1, 4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.act.1.beta - torch.Size([1, 1, 1, 4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.pwconv2.0.weight - torch.Size([1024, 4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.pwconv2.2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.1.pwconv2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.gamma - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.lk_origin.weight - torch.Size([1024, 1, 13, 13]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.origin_bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.origin_bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_conv_k5_1.weight - torch.Size([1024, 1, 5, 5]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_bn_k5_1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_bn_k5_1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_conv_k7_2.weight - torch.Size([1024, 1, 7, 7]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_bn_k7_2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_bn_k7_2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_conv_k3_3.weight - torch.Size([1024, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_bn_k3_3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_bn_k3_3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_conv_k3_4.weight - torch.Size([1024, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_bn_k3_4.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_bn_k3_4.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_conv_k3_5.weight - torch.Size([1024, 1, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_bn_k3_5.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.dwconv.dil_bn_k3_5.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.norm.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.norm.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.se.down.weight - torch.Size([256, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.se.down.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.se.up.weight - torch.Size([1024, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.se.up.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.pwconv1.1.weight - torch.Size([4096, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.pwconv1.1.bias - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.act.1.gamma - torch.Size([1, 1, 1, 4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.act.1.beta - torch.Size([1, 1, 1, 4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.pwconv2.0.weight - torch.Size([1024, 4096]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.pwconv2.2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.stages.3.2.pwconv2.2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.norm0.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.norm0.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.norm3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

backbone.norm3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.level_embeds - torch.Size([4, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.0.attentions.0.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.0.attentions.0.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.0.attentions.0.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.0.attentions.0.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.0.attentions.0.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.0.attentions.0.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.0.attentions.0.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.0.attentions.0.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.0.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.0.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.0.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.0.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.attentions.0.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.attentions.0.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.attentions.0.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.attentions.0.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.attentions.0.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.1.attentions.0.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.attentions.0.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.1.attentions.0.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.1.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.1.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.attentions.0.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.attentions.0.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.attentions.0.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.attentions.0.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.attentions.0.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.2.attentions.0.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.attentions.0.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.2.attentions.0.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.2.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.2.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.attentions.0.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.attentions.0.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.attentions.0.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.attentions.0.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.attentions.0.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.3.attentions.0.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.attentions.0.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.3.attentions.0.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.3.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.3.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.attentions.0.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.attentions.0.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.attentions.0.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.attentions.0.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.attentions.0.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.4.attentions.0.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.attentions.0.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.4.attentions.0.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.4.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.4.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.attentions.0.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.attentions.0.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.attentions.0.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.attentions.0.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.attentions.0.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.5.attentions.0.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.attentions.0.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.5.attentions.0.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.5.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.encoder.layers.5.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.encoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.0.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.0.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.0.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.0.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.0.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.0.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.0.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.1.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.1.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.1.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.1.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.1.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.1.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.1.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.2.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.2.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.2.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.2.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.2.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.2.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.2.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.3.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.3.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.3.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.3.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.3.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.3.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.3.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.4.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.4.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.4.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.4.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.4.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.4.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.4.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.5.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.5.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.5.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.5.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.ffns.0.layers.0.0.weight - torch.Size([2048, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.5.ffns.0.layers.0.0.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.ffns.0.layers.1.weight - torch.Size([256, 2048]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.decoder.layers.5.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.decoder.layers.5.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.enc_output.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.enc_output.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.enc_output_norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.enc_output_norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.pos_trans.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.pos_trans.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.pos_trans_norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.pos_trans_norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.head_pos_embed.weight - torch.Size([2, 1]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.aux_pos_trans.0.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.aux_pos_trans.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.aux_pos_trans.1.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.aux_pos_trans.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.aux_pos_trans_norm.0.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.aux_pos_trans_norm.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.aux_pos_trans_norm.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.aux_pos_trans_norm.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.pos_feats_trans.0.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.pos_feats_trans.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.pos_feats_trans.1.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CoDeformDETRHead  

query_head.transformer.pos_feats_trans.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.pos_feats_norm.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.pos_feats_norm.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.pos_feats_norm.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.transformer.pos_feats_norm.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.downsample.0.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.downsample.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.0.weight - torch.Size([80, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.0.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.1.weight - torch.Size([80, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.2.weight - torch.Size([80, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.2.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.3.weight - torch.Size([80, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.3.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.4.weight - torch.Size([80, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.4.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.5.weight - torch.Size([80, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.5.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.6.weight - torch.Size([80, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.cls_branches.6.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.0.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.0.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.0.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.0.4.weight - torch.Size([4, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.0.4.bias - torch.Size([4]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.1.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.1.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.1.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.1.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.1.4.weight - torch.Size([4, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.1.4.bias - torch.Size([4]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.2.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.2.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.2.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.2.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.2.4.weight - torch.Size([4, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.2.4.bias - torch.Size([4]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.3.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.3.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.3.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.3.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.3.4.weight - torch.Size([4, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.3.4.bias - torch.Size([4]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.4.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.4.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.4.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.4.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.4.4.weight - torch.Size([4, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.4.4.bias - torch.Size([4]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.5.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.5.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.5.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.5.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.5.4.weight - torch.Size([4, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.5.4.bias - torch.Size([4]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.6.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.6.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.6.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.6.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.6.4.weight - torch.Size([4, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.reg_branches.6.4.bias - torch.Size([4]): 
The value is the same before and after calling `init_weights` of CoDETR  

query_head.query_embedding.weight - torch.Size([300, 256]): 
The value is the same before and after calling `init_weights` of CoDETR  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

rpn_head.rpn_conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

rpn_head.rpn_cls.weight - torch.Size([9, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

rpn_head.rpn_cls.bias - torch.Size([9]): 
The value is the same before and after calling `init_weights` of CoDETR  

rpn_head.rpn_reg.weight - torch.Size([36, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

rpn_head.rpn_reg.bias - torch.Size([36]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.bbox_head.fc_cls.weight - torch.Size([81, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.bbox_head.fc_cls.bias - torch.Size([81]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.bbox_head.fc_reg.weight - torch.Size([320, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.bbox_head.fc_reg.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.upsample.weight - torch.Size([256, 256, 2, 2]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.upsample.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.conv_logits.weight - torch.Size([80, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of CoDETR  

roi_head.0.mask_head.conv_logits.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.cls_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.cls_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.cls_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.reg_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.reg_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.reg_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.atss_cls.weight - torch.Size([80, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.atss_cls.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.atss_reg.weight - torch.Size([4, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.atss_reg.bias - torch.Size([4]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.atss_centerness.weight - torch.Size([1, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.atss_centerness.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.scales.0.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.scales.1.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.scales.2.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.scales.3.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of CoDETR  

bbox_head.0.scales.4.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of CoDETR  
2024-01-28 22:24:04,077 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2024-01-28 22:24:05,630 - mmdet - INFO - Start running, host: Administrator@DESKTOP-I7P3MUU, work_dir: C:\Users\Administrator\Desktop\read-Co-DETR-main\tools\workdir
2024-01-28 22:24:05,630 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2024-01-28 22:24:05,631 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2024-01-28 22:24:05,631 - mmdet - INFO - Checkpoints will be saved to C:\Users\Administrator\Desktop\read-Co-DETR-main\tools\workdir by HardDiskBackend.
